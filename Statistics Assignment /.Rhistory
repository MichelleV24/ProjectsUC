"May2022",
"Jun2022",
"Jul2022"))
Region_count_plot<-ggplot(data = Region_count, aes(x=Month_yr, y=n, fill=Region)) +
geom_col(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1", "9999CC", "#66CC99"))+
labs(title="Appendix 6: 100% Stacked Bar chart, by Region", y='Proportion')+
theme(legend.position = "bottom")
Region_count_plot
#appendix 6
Region_count <- Hour_Day_Region %>%
group_by(Month_yr)%>%
count(Region)
Region_count$Month_yr<- ordered(Region_count$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
Region_count_plot<-ggplot(data = Region_count, aes(x=Month_yr, y=n, fill=Region)) +
geom_col(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1", "9999CC", "#66CC99"))+
labs(title="Appendix 6: 100% Stacked Bar chart, by Region", y='Proportion')+
theme(legend.position = "bottom")
Region_count_plot
total_crimes$crime_division <- str_wrap(total_crimes$crime_division, width = 25)
total_plot1<-ggplot(data=total_crimes,
aes(x=crime_division, y=occurences,
fill = crime_division, xlab= "Type of crime",
ylab = "occurence")) +
ggtitle("Fig. 1: Total Crime Occurences in New Zealand (July 2021 - July 2022)")+
theme(legend.position = "bottom")+
scale_y_continuous(labels = c(0, 1000, 2000, 3000, 4000))+
scale_x_discrete(guide = guide_axis(angle = 60)) +
geom_col() +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))
total_plot1
#appendix 5: proportion table, showing the relative proportion of crimes occurring in each region for each hour boundary in any given day.
round(prop.table(table2, 2),3)
#appendix 4: Table, showing the number of reported crimes occurring in each region for hour boundary.
table2 <- table(Hour_Day_Region$Hour, Hour_Day_Region$Region)
table2
#appendix 5: proportion table, showing the relative proportion of crimes occurring in each region for each hour boundary in any given day.
round(prop.table(table2),3)
#appendix 5: proportion table, showing the relative proportion of crimes occurring in each region for each hour boundary in any given day.
round(prop.table(table2,2),3)
total_crimes$crime_division <- str_wrap(total_crimes$crime_division, width = 25)
total_plot1<-ggplot(data=total_crimes,
aes(x=crime_division, y=occurences,
fill = crime_division, xlab= "Type of crime",
ylab = "occurence")) +
ggtitle("Fig. 1: Total Crime Occurences in New Zealand (July 2021 - July 2022)")+
theme(legend.position = "bottom", size = 10)+
scale_y_continuous(labels = c(0, 1000, 2000, 3000, 4000))+
scale_x_discrete(guide = guide_axis(angle = 60)) +
geom_col() +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))
total_plot1
total_crimes$crime_division <- str_wrap(total_crimes$crime_division, width = 25)
total_plot1<-ggplot(data=total_crimes,
aes(x=crime_division, y=occurences,
fill = crime_division, xlab= "Type of crime",
ylab = "occurence")) +
ggtitle("Fig. 1: Total Crime Occurences in New Zealand (July 2021 - July 2022)")+
theme(legend.position = "bottom", legend.text = element_text(size = 10))+
scale_y_continuous(labels = c(0, 1000, 2000, 3000, 4000))+
scale_x_discrete(guide = guide_axis(angle = 60)) +
geom_col() +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))
total_plot1
count_data_crime$crime_division <- str_wrap(count_data_crime$crime_division, width = 25)
plot_crime_region <- ggplot(data=count_data_crime, aes(x=Region, y=sum_of_crime, fill=crime_division)) +
geom_bar(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 2: 100% Stacked Bar chat, by Region", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 10))
plot_crime_region
#Appendix 1
#count_data_crime$log_of_sum<-log(count_data_crime$sum_of_crime)
Side_plot <- ggplot(data=count_data_crime, aes(x=Region, y=sum_of_crime, fill=crime_division)) +
geom_bar(stat ='identity', position=position_dodge())+
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
scale_x_discrete(guide = guide_axis(angle = 60)) +
labs(title="Appendix 1, Side-by-side Bar chart, by Crime Division")+
theme(legend.position = "bottom", legend.text = element_text(size = 10))
Side_plot
total_crimes$crime_division <- str_wrap(total_crimes$crime_division, width = 25)
total_plot1<-ggplot(data=total_crimes,
aes(x=crime_division, y=occurences,
fill = crime_division, xlab= "Type of crime",
ylab = "occurence")) +
ggtitle("Fig. 1: Total Crime Occurences in New Zealand (July 2021 - July 2022)")+
theme(legend.position = "bottom", legend.text = element_text(size = 8))+
scale_y_continuous(labels = c(0, 1000, 2000, 3000, 4000))+
scale_x_discrete(guide = guide_axis(angle = 60)) +
geom_col() +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))
total_plot1
total_crimes <- read.csv(file = "Occ Type_data copy.csv", header = TRUE,
stringsAsFactors = TRUE)
colnames(total_crimes) <- c("Type", "crime_division", "occurences")
total_crimes$Type<-NULL
summary(total_crimes)
sum(total_crimes$occurences)
summary(total_crimes$occurences)
total_crimes <- read.csv(file = "Occ Type_data copy.csv", header = TRUE,
stringsAsFactors = TRUE)
colnames(total_crimes) <- c("Type", "crime_division", "occurences")
total_crimes$Type<-NULL
summary(total_crimes$occurences)
sum(total_crimes$occurences)
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
theft_group <- Hour_Day_Region %>%
filter(Crime_Division == "Theft and Related Offences") %>%
group_by(Month_yr, Crime_Division) %>%
summarise(sum = sum(occurence))
theft_group$Month_yr<- ordered(theft_group$Month_yr, levels<-c("Aug2021",
"Sep2021",
"Oct2021",
"Nov2021",
"Dec2021",
"Jan2022",
"Feb2022",
"Mar2022",
"Apr2022",
"May2022",
"Jun2022",
"Jul2022"))
theft_plot<-ggplot(data = theft_group, aes(x=Month_yr, y = sum)) +
geom_point()+
labs(title="Fig. 7: Scatterplot graph of Theft and Related Offences in New Zealand
between August 2021 and July 2022", y='Number of reported Theft and Related offences', x= 'Month, Year')
theft_plot + geom_smooth(method="lm", formula= y~x, se=FALSE) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error"),
label.y = "bottom", label.x = "right")
plot_day_region <- ggplot(data=count_day_crime, aes(x=Region, y=sum, fill=Day)) +
geom_bar(stat ='identity')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 3: Stacked Bar chat, by Day", y='sum of crimes')+
theme(legend.position = "bottom", legend.text = element_text(size = 10))
plot_day_region
plot_day_regionP <- ggplot(data=count_day_crime, aes(x=Region, y=sum, fill=Day)) +
geom_bar(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 4: 100% Stacked Bar chat, by Day", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 10))
plot_day_regionP
count_data_crime$crime_division <- str_wrap(count_data_crime$crime_division, width = 25)
plot_crime_region <- ggplot(data=count_data_crime, aes(x=Region, y=sum_of_crime, fill=crime_division)) +
geom_bar(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 2: 100% Stacked Bar chat, by Region", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 6))
plot_crime_region
count_hour_crime<- Hour_Day_Region %>%
group_by(Region, Crime_Division, Hour) %>%
summarise(sum = sum(occurence))
plot_hour_region <- ggplot(data=count_hour_crime, aes(x=Region, y=sum, fill=Hour)) +
geom_bar(stat ='identity', position = 'fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 4: 100% Stacked Bar chat, by Hour Boundary", y='Proportion')+
theme(legend.position = "bottom")
plot_hour_region
plot_day_regionP <- ggplot(data=count_day_crime, aes(x=Region, y=sum, fill=Day)) +
geom_bar(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 3: 100% Stacked Bar chat, by Day", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 7))
plot_day_regionP
plot_day_regionP <- ggplot(data=count_day_crime, aes(x=Region, y=sum, fill=Day)) +
geom_bar(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 3: 100% Stacked Bar chat, by Day", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 7))
plot_day_regionP
plot_day_regionP <- ggplot(data=count_day_crime, aes(x=Region, y=sum, fill=Day)) +
geom_bar(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 3: 100% Stacked Bar chat, by Day", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 7))
plot_day_regionP
count_data_crime$crime_division <- str_wrap(count_data_crime$crime_division, width = 25)
plot_crime_region <- ggplot(data=count_data_crime, aes(x=Region, y=sum_of_crime, fill=crime_division)) +
geom_bar(stat ='identity', position='fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 2: 100% Stacked Bar chat, by Region", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 6))
plot_crime_region
count_hour_crime<- Hour_Day_Region %>%
group_by(Region, Crime_Division, Hour) %>%
summarise(sum = sum(occurence))
plot_hour_region <- ggplot(data=count_hour_crime, aes(x=Region, y=sum, fill=Hour)) +
geom_bar(stat ='identity', position = 'fill')+
scale_x_discrete(guide = guide_axis(angle = 60)) +
scale_fill_manual(values = c("#CC6666", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#C4961A",
"green4","#6A3D9A","#FF7F00",
"#FFDB6D","maroon","deeppink1", "orchid1"))+
labs(title="Fig. 4: 100% Stacked Bar chat, by Hour Boundary", y='Proportion')+
theme(legend.position = "bottom", legend.text = element_text(size = 7))
plot_hour_region
